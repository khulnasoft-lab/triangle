From: Arnaud Rebillout <arnaudr@kali.org>
Date: Thu, 19 Oct 2023 11:18:44 +0700
Subject: Dual: mirrors, monitor: Add a IsUp method to mirror,
 use it in monitor

Add a IsUp() method to mirrors. This is the same as the IsUp() function
that was added a few commits ago in cli/commands.go, with the difference
that in cli/commands.go, IsUp() acts on a rpc.Mirror type, while here,
IsUp() is a method of mirrors.Mirror.

We use this function in daemon/monitor.go, to enqueue a health-check if
a mirror is not up.
---
 daemon/monitor.go  |  2 +-
 mirrors/mirrors.go | 17 +++++++++++++++++
 2 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/daemon/monitor.go b/daemon/monitor.go
index dee5332..a65dac7 100644
--- a/daemon/monitor.go
+++ b/daemon/monitor.go
@@ -461,7 +461,7 @@ func (m *monitor) syncLoop() {
 				goto end
 			}
 
-			if err == nil && mir.Enabled == true && mir.Up == false {
+			if err == nil && mir.Enabled == true && mir.IsUp() == false {
 				m.healthCheckChan <- id
 			}
 
diff --git a/mirrors/mirrors.go b/mirrors/mirrors.go
index 141ecbd..5585048 100644
--- a/mirrors/mirrors.go
+++ b/mirrors/mirrors.go
@@ -79,6 +79,23 @@ func (m *Mirror) IsHTTPS() bool {
 	return strings.HasPrefix(m.HttpURL, "https://")
 }
 
+// IsUp returns true if the mirror is up
+func (m *Mirror) IsUp() bool {
+	// Up over both HTTP and HTTPS?
+	if m.HttpUp == true && m.HttpsUp == true {
+		return true
+	}
+	// Up over HTTP, no HTTPS URL?
+	if m.HttpUp == true && m.HttpsURL == "" {
+		return true
+	}
+	// Up over HTTPS, no HTTP URL?
+	if m.HttpsUp == true && m.HttpURL == "" {
+		return true
+	}
+	return false
+}
+
 // Mirrors represents a slice of Mirror
 type Mirrors []Mirror
 
