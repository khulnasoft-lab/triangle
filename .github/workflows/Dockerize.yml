name: Dockerize Tools

on:
  push:
    branches: [ master ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Install Docker and optional dependencies
      - name: Install Docker
        run: sudo apt-get update && sudo apt-get install -y docker-ce docker-compose

      # Define directories containing Dockerfiles
      - name: Set directories
        run: |
          DIRS="tools/archvsync tools/britney2 tools/mirror-status tools/mirrorbits"

      # Check Dockerfile syntax for each directory
      - name: Check Dockerfile syntax
        run: |
          for dir in $DIRS; do
            docker build -t "temp:$dir" --no-cache -f "$dir/Dockerfile" "$dir" || exit 1
          done

      # Build Docker images for each directory
      - name: Build Docker images
        run: |
          for dir in $DIRS; do
            docker build -t "$dir" --cache-from "temp:$dir" -f "$dir/Dockerfile" "$dir"
          done

      # Create symlinks (optional)
      - name: Create symlinks (optional)
        run: |
          # Customizable parameters
          DESTINATION="/path/to/symlinks"  # Destination directory for symlinks
          SYMBOLIC_PREFIX="docker-"  # Optional prefix for symlink names

          # Create symlinks based on provided parameters
          for dir in $DIRS; do
            symlink_name="$SYMBOLIC_PREFIX$dir"
            ln -sf "$dir" "$DESTINATION/$symlink_name"
          done

      - name: docker login
        run: |
          docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ${{ env.REGISTRY }}
      # Push images to registry (optional)
      - name: Push images to registry (optional)
        run: |
          for dir in $DIRS; do
          # Tag the image with the registry URL and tag
          docker tag "$dir" "${{ env.REGISTRY }}/${{ github.actor }}/$dir:latest"
        
          # Push the image to the registry
          docker push "${{ env.REGISTRY }}/${{ github.actor }}/$dir:latest"
          done
        
          echo "Successfully pushed images to registry: ${{ env.REGISTRY }}/${{ github.actor }}"
